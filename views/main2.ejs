<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/css/style.css">
<link href="http://fonts.googleapis.com/earlyaccess/hanna.css" rel="stylesheet">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>




<body>
	<div class="top">
		<div class="line_config">
			<table>
				<tr>
					<td>
						<button id="minus">
							<span class="glyphicon glyphicon-minus"></span>
						</button>
					</td>

					<td>
						<button id="plus">
							<span class="glyphicon glyphicon-plus"></span>
						</button>
					</td>

					<td><span id="test"></span></td>

				</tr>
			</table>
		</div>
	</div>



	<div class="middle">
		<div class="line_description">
			<div class="line-desc-bunch" step="1" num="1" children="0">
				<div class="panel panel-default">
					<table class="table table-striped">
						<tr>
							<td>INPUT</td>
							<td><textarea class="form-control taIp"></textarea></td>
						</tr>
						<tr>
							<td>OUTPUT</td>
							<td><textarea class="form-control taOp"></textarea></td>
						</tr>
					</table>
					<div class="delAddBtn">
						<button class="add_line">
							<span class="glyphicon glyphicon-plus"></span>
						</button>
					</div>
				</div>
			</div>
		</div>

		<div class="canvas_outer">
			<svg class="canvas_inner" height="100%" width="100%">
				<g class="line-in-canvas" step="1" num="1" children="0" >
					<line class="line" id="initial-line" line-len=""/>
					<!--  start point   -->
					<circle class="start_circle" id="initial-start-circle" stroke="black" stroke-width="2" fill="black" />
					<text class="start_text" id="initial-start-text" alignment-baseline="middle" text-anchor="middle" fill="white">IP</text>
					<!--  end point    -->
					<circle class="end_circle" id="initial-end-circle" stroke="black" stroke-width="2" fill="black" />
					<text class="end_text" id="initial-end-text" alignment-baseline="middle" text-anchor="middle" fill="white">OP</text>
				</g>
			</svg>
		</div>
	</div>



	<script>
		//가로넓이 지정하면,
		//canvas_outer가로 수정, 세로 크기 가로의 1/3수정
		//canvas_inner

		//*********************초기 브라우저의 길이, 원의 위치, 텍스트의 위치를 지정**********************//
		$('.middle').css({"width" : $(document).width() + "px"});
		$('.line_description').css({"width" : $(document).width() * 0.2 + "px"});
		$('.canvas_outer').css({"width" : $(document).width() * 0.8 + "px"});

		//*********************초기 라인의 를 조정**********************//
		$('#initial-line').attr({"x1":150,"y1":$('.canvas_inner').height()*0.5,"x2":$('.canvas_inner').width() - 150,"y2":$('.canvas_inner').height()*0.5});
		$('#initial-line').attr("line-len",$('.canvas_inner').width()-300);

		$('#initial-start-circle').attr({"cx":150, "cy":$('.canvas_inner').height()*0.5, "r":10});
		$('#initial-start-text').attr({"x":150, "y":$('.canvas_inner').height()*0.5});

		$('#initial-end-circle').attr({"cx":$('.canvas_inner').width() - 150, "cy":$('.canvas_inner').height()*0.5, "r":10});
		$('#initial-end-text').attr({"x":$('.canvas_inner').width() - 150, "y":$('.canvas_inner').height()*0.5});

		//*********************라인의 길이를 조정**********************//
		var i = 0;
		$('#plus').click(function() {
			i++;
			$('#test').text(i);
			$('.middle').css({"width" : $('.middle').width() + 100 + "px"});
			$('.canvas_outer').css({"width" : $('.middle').width()- $('.line_description').width() + "px"});
			$('#initial-line').attr("x2",$('.canvas_inner').width() - 150);
			$('#initial-end-circle').attr("cx",$('.canvas_inner').width() - 150);
			$('#initial-end-text').attr("x",$('.canvas_inner').width() - 150);
		});

		$('#minus').click(function() {
			if (i <= 0) {
				alert("더 이상 작게 설정할 수 없습니다");
			} else {
				i--;
				$('#test').text(i);
				$('.middle').css({"width" : $('.middle').width() - 100 + "px"});
				$('.canvas_outer').css({"width" : $('.middle').width()- $('.line_description').width()+ "px"});
				$('#initial-line').attr("x2", $('.canvas_inner').width() - 150);
				$('#initial-end-circle').attr("cx",$('.canvas_inner').width() - 150);
				$('#initial-end-text').attr("x",$('.canvas_inner').width() - 150);
			}
		});

		//*********************ip,op클릭시 해당 텍스트 산출**********************//







		//*********************plus button 클릭시 하위레벨의 라인 desc 생성**********************//
		$(document).on('click','.add_line',function(){
			var $ldb = $(this).parent().parent().parent();
			var step = $ldb.attr('step');
			var children = $ldb.attr('children');
			var num = $ldb.attr('num');

			var $lic = null;
			var $allLic = $('.line-in-canvas');

			for(var i=0;i<$allLic.length;i++){
				if($allLic.eq(i).attr('step')==step && $allLic.eq(i).attr('num')==num){
					$lic = $allLic.eq(i);
					break;
				}
			}

			//config children
			$ldb.attr('children',parseInt(children)+1);
			$lic.attr('children',parseInt(children)+1);

			//add input-ouput box in desc part
			var htmlDesc ='<div class="line-desc-bunch" '+
						'step="'+(parseInt(step)+1)+'" num="'+(parseInt(children)+1)+'" '+
						'p-step="'+step+ '" p-num="'+ num +'" '+
						'children="0" style="width:'+ ($(this).parent().parent().width()-20)+'px;'+
						'float:right;border-left: 2px dotted rgb(0,64,0);">'+
						'<div class="panel panel-default">'+
							'<table class="table table-striped">'+
								'<tr>'+
									'<td>INPUT</td>'+
									'<td><textarea class="form-control taIp"></textarea></td>'+
								'</tr>'+
								'<tr>'+
									'<td>OUTPUT</td>'+
									'<td><textarea class="form-control taOp"></textarea></td>'+
								'</tr>'+
							'</table>'+
							'<div class="delAddBtn">'+
								'<button class="del_line">'+
									'<span class="glyphicon glyphicon-minus"></span>'+
								'</button>'+
								'<button class="add_line">'+
									'<span class="glyphicon glyphicon-plus"></span>'+
								'</button>'+
							'</div>'+
						'</div>'+
					'</div>';
			$ldb.append(htmlDesc);

			//add group in line part
			var group = document.createElementNS('http://www.w3.org/2000/svg','g');
			group.setAttributeNS(null, 'class', 'line-in-canvas');
			group.setAttributeNS(null, 'step', parseInt(step)+1);
			group.setAttributeNS(null, 'num', parseInt(children)+1);
			group.setAttributeNS(null, 'p-step', step);
			group.setAttributeNS(null, 'p-num', num);
			group.setAttributeNS(null, 'children', 0);
//			$lic.append(group);
			$lic.after(group);

		});

		//*********************plus button 클릭시 하위레벨의 라인 생성**********************//
		$(document).on('click','.add_line',function(){
			var $ldb = $(this).parent().parent().parent();
			var step = $ldb.attr('step');
			var children = $ldb.attr('children');
			var num = $ldb.attr('num');
			var $lic = null;
			var $allLic = $('.line-in-canvas');

			for(var i=0;i<$allLic.length;i++){
				if($allLic.eq(i).attr('step')==step && $allLic.eq(i).attr('num')==num){
					$lic = $allLic.eq(i);
					break;
				}
			}

			//corordination config
			var x1 = null;
			var y1 = null;
			var x2 = null;
			var y2 = null;
			if((parseInt(step)+1)%2==0){
				//line's start x point
				x1 = $lic.children('line').attr('x1');
				//line's start y point
				y1 = parseInt($lic.children('line').attr('y1'))+parseInt($lic.children('line').attr('line-len'))*0.5*0.4;
				//line's end x point
				x2 = $lic.children('line').attr('x1');
				//line's end y point
				y2 = parseInt($lic.children('line').attr('y1'))-parseInt($lic.children('line').attr('line-len'))*0.5*0.4;
			}
			else{
				//line's start x point
				x1 = parseInt($lic.children('line').attr('x1'))-parseInt($lic.children('line').attr('line-len'))*0.5*0.4;
				//line's start y point
				y1 = $lic.children('line').attr('y2');
				//line's end x point
				x2 = parseInt($lic.children('line').attr('x1'))+parseInt($lic.children('line').attr('line-len'))*0.5*0.4;
				//line's end y point
				y2 = $lic.children('line').attr('y2');
			}

			var new$lic = null;
			for(var i=0;i<$allLic.length;i++){
				if($allLic.eq(i).attr('step')==parseInt(step)+1 && $allLic.eq(i).attr('num')==parseInt(children)){
					new$lic = $allLic.eq(i);
					break;
				}
			}

			var line = document.createElementNS('http://www.w3.org/2000/svg','line');
			line.setAttributeNS(null, 'class', 'line');
			line.setAttributeNS(null, 'line-len', parseInt($lic.children('line').attr('line-len'))*0.4);
			line.setAttributeNS(null, 'x1', x1);
			line.setAttributeNS(null, 'y1', y1);
			line.setAttributeNS(null, 'x2', x2);
			line.setAttributeNS(null, 'y2', y2);

			var start_circle = document.createElementNS('http://www.w3.org/2000/svg','circle');
			start_circle.setAttributeNS(null, 'class', 'start_circle');
			start_circle.setAttributeNS(null, 'stroke-width', '2');
			start_circle.setAttributeNS(null, 'fill', 'black');
			start_circle.setAttributeNS(null, 'cx', x1);
			start_circle.setAttributeNS(null, 'cy', y1);
			start_circle.setAttributeNS(null, 'r', '10');

			var start_text = document.createElementNS('http://www.w3.org/2000/svg','text');
			start_text.setAttributeNS(null, 'class', 'start_text');
			start_text.setAttributeNS(null, 'alignment-baseline', 'middle');
			start_text.setAttributeNS(null, 'text-anchor', 'middle');
			start_text.setAttributeNS(null, 'fill', 'white');
			start_text.setAttributeNS(null, 'x', x1);
			start_text.setAttributeNS(null, 'y', y1);

			var end_circle = document.createElementNS('http://www.w3.org/2000/svg','circle');
			end_circle.setAttributeNS(null, 'class', 'end_circle');
			end_circle.setAttributeNS(null, 'stroke-width', '2');
			end_circle.setAttributeNS(null, 'fill', 'black');
			end_circle.setAttributeNS(null, 'cx', x2);
			end_circle.setAttributeNS(null, 'cy', y2);
			end_circle.setAttributeNS(null, 'r', '10');

			var end_text = document.createElementNS('http://www.w3.org/2000/svg','text');
			end_text.setAttributeNS(null, 'class', 'end_text');
			end_text.setAttributeNS(null, 'alignment-baseline', 'middle');
			end_text.setAttributeNS(null, 'text-anchor', 'middle');
			end_text.setAttributeNS(null, 'fill', 'white');
			end_text.setAttributeNS(null, 'x', x2);
			end_text.setAttributeNS(null, 'y', y2);

			new$lic.append(line);
			new$lic.append(start_circle);
			new$lic.append(start_text);
			new$lic.append(end_circle);
			new$lic.append(end_text);
		});



		//*********************del button 클릭시 하위레벨의 라인 desc 삭제**********************//
		$(document).on('click','.del_line',function(){
			alert('하위 레벨까지 모두 삭제됩니다. 정말 삭제하시겠습니까?');
			var $ldb = $(this).parent().parent().parent();
			var step = $ldb.attr('step');
			var num = $ldb.attr('num');
			var children = $ldb.attr('children');
			var pStep = $ldb.attr('p-step');
			var pNum = $ldb.attr('p-num');
			var $allLdb = $('.line-desc-bunch');
			var $lic = null;
			var $allLic = $('.line-in-canvas');

/*			//선택된decs과 같은 레벨의 $lic 지정
			for(var i=0;i<$allLic.length;i++){
				if($allLic.eq(i).attr('step')==step && $allLic.eq(i).attr('num')==num){
					$lic = $allLic.eq(i);
					break;
				}
			}
*/

			//if children is removed, its parent children attr decrease by 1 in canvas
			for(var i=0;i<$allLic.length;i++){
				if($allLic.eq(i).attr('step')==pStep && $allLic.eq(i).attr('num')==pNum){
					$allLic.eq(i).attr('children',parseInt($allLic.eq(i).attr('children'))-1);
					break;
				}
			}


			for(var i=0;i<=$ldb.find('.line-desc-bunch').length;i++){
				for(var k=0;k<$allLic.length;k++){
					if($ldb.find('.line-desc-bunch').eq(i).attr('step')==$allLic.eq(k).attr('step')&&
							$ldb.find('.line-desc-bunch').eq(i).attr('num')==$allLic.eq(k).attr('num')){
						$allLic.eq(k).remove();
					}
					else if($ldb.attr('step')==$allLic.eq(k).attr('step')&&
							$ldb.attr('num')==$allLic.eq(k).attr('num')){
						$allLic.eq(k).remove();
					}
				}
			}


			//if children is removed, its parent children attr decrease by 1 in desc
			for(var i=0;i<$allLdb.length;i++){
				if($allLdb.eq(i).attr('step')==pStep && $allLdb.eq(i).attr('num')==pNum){
					$allLdb.eq(i).attr('children',parseInt($allLdb.eq(i).attr('children'))-1);
					break;
				}
			}

			//if parent is removed, its children will be deleted together in desc
			$ldb.remove();




		});





		//*********************라인의 위치 이동**********************//\

//* 도저히 이로직으로 불가능하다.. 실패입니다..
		var dragging = false;
		var $lineTarget;
		var $allLic;
		var $allLdb;
		var ix, iy;

		$(document).on('mousedown','g.line-in-canvas',function(e){
			dragging = true;
			$lineTarget = $(this);
		});


		$(document).on('mousemove',document,function(e){
			if(dragging){
				var $descTarget;
				$allLdb = $(document).find('.line-desc-bunch');
				$allLic = $(document).find('.line-in-canvas');
				for(var i=0;i<$allLdb.length;i++){
					if($lineTarget.attr('step')==$allLdb.eq(i).attr('step') &&
							$lineTarget.attr('num')==$allLdb.eq(i).attr('num')){
						$descTarget = $allLdb.eq(i);
					}
				}


				for(var i=0;i<=$allLdb.length;i++){
					if((parseInt($lineTarget.attr('step')))%2==0){
						ix = parseInt(e.offsetX) - parseInt($lineTarget.find('line.line').attr('x1'));
						for(var k=0;k<$allLic.length;k++){
							if($descTarget.find('.line-desc-bunch').eq(i).attr('step')==$allLic.eq(k).attr('step')&&
									$descTarget.find('.line-desc-bunch').eq(i).attr('num')==$allLic.eq(k).attr('num')){
								//alert($allLic.eq(k).attr('step'));

								var originX1 = $allLic.eq(k).find('line.line').attr('x1');
								var originX2 = $allLic.eq(k).find('line.line').attr('x2');

								$allLic.eq(k).find('line.line').attr({'x1':parseInt(originX1)+ix,'x2':parseInt(originX2)+ix});
								$allLic.eq(k).find('circle.start_circle').attr({'cx':parseInt(originX1)+ix});
								$allLic.eq(k).find('text.start_text').attr({'x':parseInt(originX1)+ix});
								$allLic.eq(k).find('circle.end_circle').attr({'cx':parseInt(originX2)+ix});
								$allLic.eq(k).find('text.end_text').attr({'x':parseInt(originX2)+ix});

							}
							else if($descTarget.attr('step')==$allLic.eq(k).attr('step')&&
									$descTarget.attr('num')==$allLic.eq(k).attr('num')){
								$allLic.eq(k).find('line.line').attr({'x1':e.offsetX,'x2':e.offsetX});
								$allLic.eq(k).find('circle.start_circle').attr({'cx':e.offsetX});
								$allLic.eq(k).find('text.start_text').attr({'x':e.offsetX});
								$allLic.eq(k).find('circle.end_circle').attr({'cx':e.offsetX});
								$allLic.eq(k).find('text.end_text').attr({'x':e.offsetX});
							}
						}
					}

					else{
						iy = parseInt(e.offsetY) - parseInt($lineTarget.find('line.line').attr('y1'));
						for(var k=0;k<$allLic.length;k++){
							if($descTarget.find('.line-desc-bunch').eq(i).attr('step')==$allLic.eq(k).attr('step')&&
									$descTarget.find('.line-desc-bunch').eq(i).attr('num')==$allLic.eq(k).attr('num')){

								var originY1 = $allLic.eq(k).find('line.line').attr('y1');
								var originY2 = $allLic.eq(k).find('line.line').attr('y2');

								$allLic.eq(k).find('line.line').attr({'y1':parseInt(originY1)+iy,'y2':parseInt(originY2)+iy});
								$allLic.eq(k).find('circle.start_circle').attr({'cy':parseInt(originY1)+iy});
								$allLic.eq(k).find('text.start_text').attr({'y':parseInt(originY1)+iy});
								$allLic.eq(k).find('circle.end_circle').attr({'cy':parseInt(originY2)+iy});
								$allLic.eq(k).find('text.end_text').attr({'y':parseInt(originY2)+iy});

							}
							else if($descTarget.attr('step')==$allLic.eq(k).attr('step')&&
									$descTarget.attr('num')==$allLic.eq(k).attr('num')){
								$allLic.eq(k).find('line.line').attr({'y1':e.offsetY,'y2':e.offsetY});
								$allLic.eq(k).find('circle.start_circle').attr({'cy':e.offsetY});
								$allLic.eq(k).find('text.start_text').attr({'y':e.offsetY});
								$allLic.eq(k).find('circle.end_circle').attr({'cy':e.offsetY});
								$allLic.eq(k).find('text.end_text').attr({'y':e.offsetY});
							}
						}
					}
				}

/*
				if((parseInt($lineTarget.attr('step')))%2==0){
					$lineTarget.find('line.line').attr({'x1':e.offsetX,'x2':e.offsetX});
					$lineTarget.find('circle.start_circle').attr({'cx':e.offsetX});
					$lineTarget.find('text.start_text').attr({'x':e.offsetX});
					$lineTarget.find('circle.end_circle').attr({'cx':e.offsetX});
					$lineTarget.find('text.end_text').attr({'x':e.offsetX});
				}

				else{
					$lineTarget.find('line.line').attr({'y1':e.offsetY,'y2':e.offsetY});
					$lineTarget.find('circle.start_circle').attr({'cy':e.offsetY});
					$lineTarget.find('text.start_text').attr({'y':e.offsetY});
					$lineTarget.find('circle.end_circle').attr({'cy':e.offsetY});
					$lineTarget.find('text.end_text').attr({'y':e.offsetY});
				}
*/
			}
		});

		$(document).on('mouseup',document,function(e){
			if(dragging){
				dragging = false;
			}
		});
//*/




	</script>




</body>
</html>